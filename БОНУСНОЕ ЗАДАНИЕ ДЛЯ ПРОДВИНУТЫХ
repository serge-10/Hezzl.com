Сначала установим необходимые пакеты: 

npm install axios chai mocha mocha-allure-reporter --save-dev

Затем автотесты 

const axios = require('axios');
const chai = require('chai');
const { expect } = chai;
const { AllureRuntime, InMemoryAllureWriter, MochaAllureReporter } = require('mocha-allure2-reporter');

// Инициализация Allure
const allure = new AllureRuntime({ resultsDir: './allure-results' });
const writer = new InMemoryAllureWriter();
const reporter = new MochaAllureReporter(allure, writer);

// URL и переменные окружения
const baseUrl = 'https://api-prod.hezzl.com/';
const campaignId = 145602;
const email = 'test@hezzl.com';
const password = '123456';
let accessToken;

// Инициализация тестового окружения
before(async () => {
  // Можно добавить код инициализации, если необходимо
});

// Тесты
describe('Init Collection', () => {
  // Init метод
  it('Init Method', async () => {
    const response = await axios.post(`${baseUrl}gw/v1/game/${campaignId}/init`, {
      email,
      password,
      accessToken,
    });

    // Проверка статуса ответа
    expect(response.status).to.equal(200);

    // Записываем в переменную timeZone значение параметра time из ответа
    const timeZone = response.data.data.time;
    expect(timeZone).to.be.a('string');

    // Проверяем наличие параметра data в ответе
    expect(response.data).to.have.property('data');

    // Проверяем наличие параметра auth в data в ответе
    expect(response.data.data).to.have.property('auth');
  });
});

describe('Login Collection', () => {
  // CheckLogin метод
  it('CheckLogin Method', async () => {
    const response = await axios.post(`${baseUrl}auth/v1/game/${campaignId}/check-login`, {
      login: email,
    });

    // Проверка статуса ответа
    expect(response.status).to.equal(200);

    // Записываем в переменную accessToken значение параметра accessToken из ответа
    accessToken = response.data.accessToken;
    expect(accessToken).to.be.a('string');

    // Проверяем, что скорость ответа от сервера менее 200ms
    expect(response.config.timingPhases.responseEnd).to.be.below(200);
  });

  // ConfirmCode метод
  it('ConfirmCode Method', async () => {
    const response = await axios.post(
      `${baseUrl}auth/v1/game/${campaignId}/confirm-code`,
      { code: password },
      { headers: { Authorization: accessToken } }
    );

    // Проверка статуса ответа
    expect(response.status).to.equal(200);

    // Проверяем, что скорость ответа от сервера менее 200ms
    expect(response.config.timingPhases.responseEnd).to.be.below(200);
  });
});

// Генерация отчетов Allure
after(async () => {
  await allure.writeEnvironmentInfo({});
  await allure.writeExecutorInfo({});
  await allure.finalize();
  await reporter.generate();
});
